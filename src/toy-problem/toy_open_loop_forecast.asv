load('data/networks/toy-nets/SingleStepNet_071122.mat')
load('data/networks/toy-nets/SingleStepTestData_071122.mat')

idx = 1;

X = XTest{idx};
T = TTest{idx};

net = resetState(net);
offset = 5;
[net, ~] = predictAndUpdateState(net, X(:,1:offset));

numTimeSteps = size(X, 2);
numPredictionTimeSteps = numTimeSteps - offset;
Y = zeros(6, numPredictionTimeSteps);
 
for t = 1:numPredictionTimeSteps
    Xt = X(:,offset+t);
    [net, Y(:,t)] = predictAndUpdateState(net,Xt);
end
%% Plotting

figure
t = tiledlayout(3,2)
ylabels = ["Vehicle Pitch (radians)", "Joint 1 Angle (radians)", "Joint 2 Angle (radians)", "Pitch Velocity (rad/s)", "Joint 1 Velocity (rad/s)", "Joint 2 Velocity (rad/s)"];
order = [1 3 5 2 4 6];

for i = 1:6
    idx = order(i)
    ax = nexttile;
    axes(idx) = ax;
    plot((1:numTimeSteps)/50, T(idx,:).*p.sig(idx)+p.mu(idx), 'LineWidth', 2, 'Color', '#FFC20A')
    hold on
    plot((offset+1:numTimeSteps)/50, Y(idx,:).*p.sig(idx)+p.mu(idx), '--', 'LineWidth', 2, 'Color', '#0C7BDC')
    xlabel("Time (s)")
    ylabel(ylabels(idx))
    legend("Input", "Forecasted") 
end
title(t, "One Step Prediction Error")

% nexttile(1).ylabel("Vehicle Pitch (radians)")

